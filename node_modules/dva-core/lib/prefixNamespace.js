'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _keys = require('babel-runtime/core-js/object/keys');

var _keys2 = _interopRequireDefault(_keys);

exports.default = prefixNamespace;

var _warning = require('warning');

var _warning2 = _interopRequireDefault(_warning);

var _utils = require('./utils');

var _constants = require('./constants');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function prefix(obj, namespace, type) {
  return (0, _keys2.default)(obj).reduce(function (memo, key) {
    (0, _warning2.default)(key.indexOf('' + namespace + _constants.NAMESPACE_SEP) !== 0, '[prefixNamespace]: ' + type + ' ' + key + ' should not be prefixed with namespace ' + namespace);
    var newKey = '' + namespace + _constants.NAMESPACE_SEP + key;
    memo[newKey] = obj[key];
    return memo;
  }, {});
}

function prefixNamespace(model) {
  var namespace = model.namespace,
      reducers = model.reducers,
      effects = model.effects;


  if (reducers) {
    if ((0, _utils.isArray)(reducers)) {
      model.reducers[0] = prefix(reducers[0], namespace, 'reducer');
    } else {
      model.reducers = prefix(reducers, namespace, 'reducer');
    }
  }
  if (effects) {
    model.effects = prefix(effects, namespace, 'effect');
  }
  return model;
}
module.exports = exports['default'];