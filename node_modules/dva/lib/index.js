'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _typeof2 = require('babel-runtime/helpers/typeof');

var _typeof3 = _interopRequireDefault(_typeof2);

var _toConsumableArray2 = require('babel-runtime/helpers/toConsumableArray');

var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

exports.default = function () {
  var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  var history = opts.history || (0, _createHashHistory2.default)();
  var createOpts = {
    initialReducer: {
      routing: _reactRouterRedux.routerReducer
    },
    setupMiddlewares: function setupMiddlewares(middlewares) {
      return [(0, _reactRouterRedux.routerMiddleware)(history)].concat((0, _toConsumableArray3.default)(middlewares));
    },
    setupApp: function setupApp(app) {
      app._history = patchHistory(history);
    }
  };

  var app = core.create(opts, createOpts);
  var oldAppStart = app.start;
  app.router = router;
  app.start = start;
  return app;

  function router(router) {
    (0, _invariant2.default)((0, _utils.isFunction)(router), '[app.router] router should be function, but got ' + (typeof router === 'undefined' ? 'undefined' : (0, _typeof3.default)(router)));
    app._router = router;
  }

  function start(container) {
    // 允许 container 是字符串，然后用 querySelector 找元素
    if (isString(container)) {
      container = _document2.default.querySelector(container);
      (0, _invariant2.default)(container, '[app.start] container ' + container + ' not found');
    }

    // 并且是 HTMLElement
    (0, _invariant2.default)(!container || isHTMLElement(container), '[app.start] container should be HTMLElement');

    // 路由必须提前注册
    (0, _invariant2.default)(app._router, '[app.start] router must be registered before app.start()');

    oldAppStart.call(app);
    var store = app._store;

    // export _getProvider for HMR
    // ref: https://github.com/dvajs/dva/issues/469
    app._getProvider = getProvider.bind(null, store, app);

    // If has container, render; else, return react component
    if (container) {
      render(container, store, app, app._router);
      app._plugin.apply('onHmr')(render.bind(null, container, store, app));
    } else {
      return getProvider(store, this, this._router);
    }
  }
};

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _invariant = require('invariant');

var _invariant2 = _interopRequireDefault(_invariant);

var _createHashHistory = require('history/createHashHistory');

var _createHashHistory2 = _interopRequireDefault(_createHashHistory);

var _reactRouterRedux = require('react-router-redux');

var _document = require('global/document');

var _document2 = _interopRequireDefault(_document);

var _reactRedux = require('react-redux');

var _dvaCore = require('dva-core');

var core = _interopRequireWildcard(_dvaCore);

var _utils = require('dva-core/lib/utils');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function isHTMLElement(node) {
  return (typeof node === 'undefined' ? 'undefined' : (0, _typeof3.default)(node)) === 'object' && node !== null && node.nodeType && node.nodeName;
}

function isString(str) {
  return typeof str === 'string';
}

function getProvider(store, app, router) {
  return function (extraProps) {
    return _react2.default.createElement(
      _reactRedux.Provider,
      { store: store },
      router((0, _extends3.default)({ app: app, history: app._history }, extraProps))
    );
  };
}

function render(container, store, app, router) {
  var ReactDOM = require('react-dom'); // eslint-disable-line
  ReactDOM.render(_react2.default.createElement(getProvider(store, app, router)), container);
}

function patchHistory(history) {
  var oldListen = history.listen;
  history.listen = function (callback) {
    callback(history.location);
    return oldListen.call(history, callback);
  };
  return history;
}
module.exports = exports['default'];